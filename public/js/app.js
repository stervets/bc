// Generated by CoffeeScript 1.7.1
(function() {
  this.Application = (function() {
    Application.states = {};

    Application.initialState = null;

    Application.State = function(name, params, initialState) {
      this.states[name] = params;
      if (initialState != null) {
        return this.initialState = name;
      }
    };

    Application.image = function(filename) {
      return ASSETS.IMAGES + filename;
    };

    Application.imagePng = function(filename) {
      return Application.image("" + filename + ".png");
    };

    Application.imageJpeg = function(filename) {
      return Application.image("" + filename + ".jpg");
    };

    Application.prototype.loadImage = function(filename, name) {
      if (name == null) {
        name = filename.substr(0, filename.indexOf('.'));
      }
      return this.game.load.image(name, Application.image(filename));
    };

    Application.prototype.loadPng = function(filename, name) {
      filename += '.png';
      return this.loadImage(filename, name);
    };

    Application.prototype.loadJpeg = function(filename, name) {
      filename += '.jpg';
      return this.loadImage(filename, name);
    };

    function Application() {
      var name, state, _ref;
      this.game = new Phaser.Game(GAME.WIDTH, GAME.HEIGHT, Phaser.WEBGL, GAME.GAME_NODE);
      _ref = Application.states;
      for (name in _ref) {
        state = _ref[name];
        this.game.state.add(name, state);
      }
      this.game.state.start(Application.initialState);
      _dump(this.game);
    }

    return Application;

  })();

  window.onload = function() {
    return new Application();
  };

}).call(this);

//# sourceMappingURL=app.map
